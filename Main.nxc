void initializeSensors() {
    SetSensorUltrasonic(S2);
    SetSensorLight(S3);
}

void moveForward() { // Jill
    // move the robot forward using differential steering
    OnFwd(OUT_B, 75);
    OnFwd(OUT_C, 75);
}

void backUp() { // Jill
    // back the robot up to get away from the cup
    OnRev(OUT_B, 75);
    OnRev(OUT_C, 75);
}

bool lineDetect() { // Lara
    return SensorValue(S3) > 40; // detect whether or not there is a line
}

bool cupDetect() { // Sam
    // detect whether or not there is a cup in range
    // this is gonna be a tough mother, probably need static variables
}

bool orient() { // Sam
    // orient toward the cup
    // return true if properly oriented, false otherwise (probably change back to search mode)
}

void turnAround() { // Tyler
    OnFwd(OUT_B, 60);
    OnRev(OUT_C, 60);}

void openclaws() {
    RotateMotor(OUT_A, 75, 60); // 60 degrees open direction
}

void closeClaws() {
    RotateMotor(OUT_A, 75, -60); // 60 degrees close direction
}

int getUltrasonicReading() {
    return SensorUS(S2); // digital readout of sensor value
}



task main() {
    // text header for robot screen
    TextOut(0, 60, "Block Heads");
    TextOut(0, 50, "Main");
    TextOut(0, 40, "Version 1.0");
     
    initializeSensors();
     
    const int searchState = 1;
    const int grabState = 2;
    const int removeState = 3;

    int state = searchState;
    bool stateMachineRunning = true;

    while (stateMachineRunning) { // while loop that keeps the entire state machine running

        TextOut(10, 0, "State is currently ");
        NumOut(0, 0, state); // show state variable on robot screen

        switch (state) {
            case searchState:
                while (!lineDetect() and !cupDetect()) {
                    moveForward();
                }
                if (lineDetect()) {
                    turnAround();
                }
                if (cupDetect()) {
                    state = grabState;
                }
                break;

            case grabState:
                if (!orient()) {
                    state = searchState;
                    closeClaws();
                    break;
                }
                openClaws();
                if (!moveIntoGrabbingPosition()) {
                    state = searchState;
                    closeClaws();
                    break;
                }
                closeClaws();
                state = removeState;
                // possible sense that cup is there (optional)
                break;
            
            case removeState:
                while (!lineDetect()) {
                    moveForward();
                }
                openClaws();
                backUp();
                closeClaws();
                turnAround();
                state = searchState;
                break;

            default: // error state
                stateMachineRunning = false; // gets you out of state machine
        }
    }
}



/* CHEAT SHEET
Motors:
A - Claws
B - Left
C - Right

Sensors:
1 - Microphone
2 - Ultrasonic Sensor
3 - Light Sensor
4 - Push Button
*/